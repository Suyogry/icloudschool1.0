{"version":3,"sources":["./src/app/user-pages/login/login.component.html","./src/app/user-pages/register/register.component.html","./src/app/user-pages/login/login.component.scss","./src/app/user-pages/login/login.component.ts","./src/app/user-pages/register/register.component.scss","./src/app/user-pages/register/register.component.ts","./src/app/user-pages/user-pages.module.ts"],"names":[],"mappings":"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","file":"user-pages-user-pages-module-es2015.js","sourcesContent":["module.exports = \"<div class=\\\"d-flex align-items-center auth px-0\\\">\\n  <div class=\\\"row w-100 mx-0\\\">\\n    <div class=\\\"col-lg-4 mx-auto\\\">\\n      <div class=\\\"auth-form-light text-left py-5 px-4 px-sm-5\\\">\\n        <div class=\\\"brand-logo center\\\">\\n          <img src=\\\"assets/images/logo.png\\\" alt=\\\"logo\\\">\\n        </div>\\n        <h4>Hello! let's get started</h4>\\n        <h6 class=\\\"font-weight-light\\\">Sign in to continue.</h6>\\n        <form class=\\\"pt-3\\\" name=\\\"form\\\" [formGroup]=\\\"form\\\" (ngSubmit)=\\\"form.valid && onSubmit()\\\">\\n          <div>\\n            <select formControlName=\\\"userType\\\" class=\\\"custom-select\\\">\\n              <option [ngValue]=\\\"null\\\" disabled>Choose User Type</option>\\n              <option *ngFor=\\\"let ut of alluserTypes\\\" [ngValue]=\\\"ut\\\">\\n               {{ ut.utName }}\\n              </option>\\n            </select> \\n          </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"email\\\">Email</label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"email\\\" [ngClass]=\\\"{'is-invalid':form.get('email').touched && form.get('email').invalid}\\\"   />\\n          <div *ngIf=\\\"form.get('email').touched && form.get('email').invalid\\\"  class=\\\"invalid-feedback\\\">\\n            <div *ngIf=\\\"form.get('email').errors.required\\\">Email is required</div>\\n            <div *ngIf=\\\"form.get('email').errors.email\\\">Email must be a valid email Address</div>\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"password\\\">Password</label>\\n          <input type=\\\"password\\\" class=\\\"form-control\\\"  formControlName=\\\"password\\\" [ngClass]=\\\"{'is-invalid':form.get('password').touched && form.get('password').invalid}\\\" />\\n          <div *ngIf=\\\"form.get('password').touched && form.get('password').invalid\\\"  class=\\\"invalid-feedback\\\">\\n            <div *ngIf=\\\"form.get('password').errors.required\\\">Password is required</div>\\n          </div>\\n         \\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <button class=\\\"btn btn-primary btn-block btn-lg\\\"  [disabled]=\\\"!form.valid\\\">Log In</button>\\n        </div>\\n        </form>\\n      </div>\\n    </div>\\n  </div>\\n</div>  \"","module.exports = \"<div class=\\\"d-flex align-items-center auth px-0\\\">\\n  <div class=\\\"row w-100 mx-0\\\">\\n    <div class=\\\"col-lg-4 mx-auto\\\">\\n      <div class=\\\"auth-form-light text-left py-5 px-4 px-sm-5\\\">\\n        <div class=\\\"brand-logo\\\">\\n          <img src=\\\"assets/images/logo.png\\\" alt=\\\"logo\\\">\\n        </div>\\n        <h4>New here?</h4>\\n        <h6 class=\\\"font-weight-light\\\">Signing up is easy. It only takes a few steps</h6>\\n        <form class=\\\"pt-3\\\" name=\\\"form\\\" [formGroup]=\\\"form\\\" (ngSubmit)=\\\"form.valid && onSubmit()\\\">\\n          <div>\\n            <select formControlName=\\\"userType\\\">\\n              <option [ngValue]=\\\"null\\\" disabled>Choose User Type</option>\\n              <option *ngFor=\\\"let ut of alluserTypes\\\" [ngValue]=\\\"ut\\\">\\n               {{ ut.utName }}\\n              </option>\\n            </select> \\n          </div>\\n          <div class=\\\"form-group\\\">\\n          <label for=\\\"firstName\\\">First Name</label>\\n          <input type=\\\"text\\\"  class=\\\"form-control\\\" formControlName=\\\"firstName\\\" [ngClass]=\\\"{'is-invalid':form.get('firstName').touched && form.get('firstName').invalid}\\\" required />\\n          <div class=\\\"invalid-feedback\\\">\\n            <div>First Name is required</div>\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"lastName\\\">Last Name</label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"lastName\\\" [ngClass]=\\\"{'is-invalid':form.get('lastName').touched && form.get('lastName').invalid}\\\" required />\\n          <div class=\\\"invalid-feedback\\\">\\n            <div>Last Name is required</div>\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"Class\\\">Class</label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"Class\\\" [ngClass]=\\\"{'is-invalid':form.get('Class').touched && form.get('Class').invalid}\\\" required />\\n          <div class=\\\"invalid-feedback\\\">\\n            <div>Last Name is required</div>\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"email\\\">Email</label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"email\\\" [ngClass]=\\\"{'is-invalid':form.get('email').touched && form.get('email').invalid}\\\"   />\\n          <div *ngIf=\\\"form.get('email').touched && form.get('email').invalid\\\"  class=\\\"invalid-feedback\\\">\\n            <div *ngIf=\\\"form.get('email').errors.required\\\">Email Name is required</div>\\n            <div *ngIf=\\\"form.get('email').errors.email\\\">Email must be a valid email Address</div>\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"password\\\">Password</label>\\n          <input type=\\\"password\\\" class=\\\"form-control\\\"  formControlName=\\\"password\\\" [ngClass]=\\\"{'is-invalid':form.get('password').touched && form.get('password').invalid}\\\" />\\n          <div *ngIf=\\\"form.get('password').touched && form.get('password').invalid\\\"  class=\\\"invalid-feedback\\\">\\n            <div *ngIf=\\\"form.get('password').errors.required\\\">Password is required</div>\\n            <div *ngIf=\\\"form.get('password').errors.minlength\\\">Password  must be a letaset 6 charector</div>\\n          </div>\\n         \\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <button class=\\\"btn btn-primary\\\"  [disabled]=\\\"!form.valid\\\">Register</button>\\n        </div>\\n        </form>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXItcGFnZXMvbG9naW4vbG9naW4uY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators, NgForm } from '@angular/forms';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { Router } from '@angular/router';\nexport class userType { \n  constructor(public utId:string, public utName:string) { }\t\n}\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  isLoading=false;\n  form = new FormGroup({\n    userType:new FormControl('',[Validators.required]),\n    email: new FormControl('',[Validators.required, Validators.email]),\n    password: new FormControl('',[Validators.required, Validators.minLength(4)])\n  });\n  alluserTypes=[\n    new userType('admin','Administrator'),\n    new userType('student','Student'),\n    new userType('faculty','Faculty'),\n    new userType('parent','Parent')\n];\n\n\n  constructor(private _auth: AuthService,\n    private _router: Router) { }\n  ngOnInit(): void {\n  }\n\n  onLogin(form: NgForm){\n\n  }\n\n  email = new FormControl('', [Validators.required, Validators.email]);\n  onSubmit(){\n    this.isLoading=true;\n    this._auth.loginUser(this.form.value)\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXItcGFnZXMvcmVnaXN0ZXIvcmVnaXN0ZXIuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport {FormGroup, FormControl, Validators} from '@angular/forms';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { Router } from '@angular/router';\nexport class userType { \n  constructor(public utId:string, public utName:string) {\n  }\t\n}\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n\n  form = new FormGroup({\n    firstName: new FormControl('',Validators.required),\n    lastName: new FormControl('',Validators.required),\n    Class: new FormControl('',Validators.required),\n    email: new FormControl('',[Validators.required, Validators.email]),\n    password: new FormControl('',[Validators.required, Validators.minLength(4)]),\n    userType:new FormControl('',[Validators.required])\n  });\n  alluserTypes=[\n    new userType('admin','Administrator'),\n    new userType('student','Student'),\n    new userType('faculty','Faculty'),\n    new userType('parent','Parent')\n];\n\n  constructor(private _auth: AuthService,\n    private _router: Router) { }\n\n  ngOnInit(): void {\n  }\n  onSubmit(){\n    console.log(this.form.value.userType.utId);\n    this._auth.registerUser(this.form.value)\n      .subscribe(\n        res => {\n          console.log(res);\n          //localStorage.setItem('token', res.token)\n          this._router.navigate(['/login']);\n        },\n        err =>console.log(err)\n      )\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { Routes, RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nconst routes: Routes = [\n  { path: 'login', component: LoginComponent },\n  { path: 'register', component: RegisterComponent },\n]\n\n@NgModule({\n  declarations: [LoginComponent, RegisterComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RouterModule.forChild(routes)\n  ]\n})\nexport class UserPagesModule { }\n"],"sourceRoot":""}